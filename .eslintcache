[{"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\Navbar\\index.js":"1","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\screens\\home\\index.js":"2","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\menu\\index.js":"3","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\index.js":"4","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\menu-item\\index.js":"5","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\header-home\\index.js":"6","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\test-details\\index.js":"7","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\banner\\index.js":"8","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\footer\\index.js":"9","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\technologies-summary\\index.js":"10","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\App.js":"11","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\screens\\survey\\index.js":"12","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\reportWebVitals.js":"13","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\survey.js":"14","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\actions\\findSurvey.js":"15","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\reducers\\survey.js":"16","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\form-item\\index.js":"17","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\store.js":"18","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\form-body\\index.js":"19"},{"size":1367,"mtime":1606203100485,"results":"20","hashOfConfig":"21"},{"size":1031,"mtime":1606207132996,"results":"22","hashOfConfig":"21"},{"size":335,"mtime":1606201025116,"results":"23","hashOfConfig":"21"},{"size":501,"mtime":1606200917127,"results":"24","hashOfConfig":"21"},{"size":474,"mtime":1606203154742,"results":"25","hashOfConfig":"21"},{"size":1252,"mtime":1606232344219,"results":"26","hashOfConfig":"21"},{"size":855,"mtime":1606207782108,"results":"27","hashOfConfig":"21"},{"size":187,"mtime":1606207609750,"results":"28","hashOfConfig":"21"},{"size":399,"mtime":1606206879683,"results":"29","hashOfConfig":"21"},{"size":729,"mtime":1606207386472,"results":"30","hashOfConfig":"21"},{"size":791,"mtime":1606236920093,"results":"31","hashOfConfig":"21"},{"size":9435,"mtime":1606249303003,"results":"32","hashOfConfig":"21"},{"size":362,"mtime":1606188005154,"results":"33","hashOfConfig":"21"},{"size":1800,"mtime":1606246008514,"results":"34","hashOfConfig":"21"},{"size":130,"mtime":1606231773451,"results":"35","hashOfConfig":"21"},{"size":338,"mtime":1606234612888,"results":"36","hashOfConfig":"21"},{"size":241,"mtime":1606233302930,"results":"37","hashOfConfig":"21"},{"size":205,"mtime":1606230650553,"results":"38","hashOfConfig":"21"},{"size":4319,"mtime":1606245432367,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"84drq9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\Navbar\\index.js",[],["83","84"],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\screens\\home\\index.js",[],["85","86"],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\menu\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\index.js",[],["87","88"],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\menu-item\\index.js",["89"],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\header-home\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\test-details\\index.js",["90"],"import React from 'react'\r\nconst TestDetails = ( { navigate } ) => {\r\n    return(\r\n        <>\r\n            <div className='details--container'>\r\n                <div className='details--container__card'>\r\n                    <h3 className='container--card__title'>Description of this test</h3>\r\n                    <p className='container--card__content'>This test have the purpose to write a React App that can create fake surveys consuming a json</p>\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <a href='#' className='neon-button' onClick={ e => navigate('/survey', e)}>\r\n                            Go to Survey\r\n                        </a>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TestDetails","C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\banner\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\footer\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\technologies-summary\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\App.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\screens\\survey\\index.js",["91"],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\reportWebVitals.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\survey.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\actions\\findSurvey.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\reducers\\survey.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\ui-components\\form-item\\index.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\redux\\store.js",[],"C:\\Users\\laloo\\OneDrive\\Escritorio\\prueba_react_ingles\\survey_generator\\src\\components\\sections\\form-body\\index.js",["92"],"import React from 'react'\r\nimport moment from 'moment'\r\nimport {\r\n    TextField,\r\n    InputLabel,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    RadioGroup,\r\n    Radio,\r\n    Select,\r\n    MenuItem\r\n} from '@material-ui/core'\r\nimport FormItem from '../../ui-components/form-item'\r\nconst FormBody = ( handleChange, survey_questions, answers, sendData ) => {\r\n    return(\r\n        <>\r\n        { survey_questions.map(( question, key ) => \r\n            <>\r\n                <FormItem key={ key }>\r\n                    { question.type === 'text' ? (\r\n                        <>\r\n                            <InputLabel style={{ marginBottom: 10, marginTop: 10 }}> { question.question } </InputLabel>\r\n                            <TextField \r\n                                placeholder='Answer the question' \r\n                                style={{ width: '80%' }}\r\n                                value={answers[question.id] === undefined ? '' : answers[question.id].value }\r\n                                onChange={ e => handleChange( question, e.target.value ) }\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                    { question.type === 'hour-init' ? (\r\n                        <>\r\n                            <InputLabel style={{ marginBottom: 10, marginTop: 10 }}> { question.question } </InputLabel>\r\n                            <TextField\r\n                                disabled\r\n                                defaultValue={ moment().format('LTS') }\r\n                                \r\n                            />\r\n                        </>\r\n                    ): null }\r\n                    { question.type === 'checkbox' ? (\r\n                        <>\r\n                            <InputLabel style={{ marginBottom: 10, marginTop: 10 }}> { question.question } </InputLabel>\r\n                            <FormGroup row>\r\n                                { question.options.map(( option, key ) => \r\n                                    <FormControlLabel\r\n                                        key={ key }\r\n                                        control={<Checkbox  name={ option } />}\r\n                                        onChange={ e => handleChange( question, e.target.checked, e.target.name )}\r\n                                        label={ option }\r\n                                    />\r\n                                ) }\r\n                            </FormGroup>\r\n                        </>\r\n                    ): null }\r\n                    { question.type === 'radio' ? (\r\n                        <>\r\n                            <InputLabel style={{ marginBottom: 10, marginTop: 10 }}> { question.question } </InputLabel>\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={ e => handleChange( question, e.target.value ) } >\r\n                                { question.options.map(( option, key ) => \r\n                                    <FormControlLabel key={ key } value={ option } control={<Radio />} label={ option } />\r\n                                ) }\r\n                            </RadioGroup>\r\n                        </>\r\n                    ): null }\r\n                    { question.type === 'select' ? (\r\n                        <>\r\n                            <InputLabel style={{ marginBottom: 10, marginTop: 10 }}> { question.question } </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                onChange={ e => handleChange( question, e.target.value ) }\r\n                            >\r\n                                { question.options.map(( option, key ) => \r\n                                    <MenuItem value={ option } key={ key } >{ option }</MenuItem>\r\n                                ) }\r\n                            </Select>\r\n                        </>\r\n                    ): null }\r\n                </FormItem>\r\n            </>\r\n        ) }\r\n        <FormItem>\r\n            <div style={{ display:'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <a className='neon-button'> Enviar </a>\r\n            </div>\r\n        </FormItem>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default FormBody",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"93","replacedBy":"99"},{"ruleId":"95","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":9,"nodeType":"103","endLine":11,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":10,"column":25,"nodeType":"103","endLine":10,"endColumn":100},{"ruleId":"101","severity":1,"message":"102","line":174,"column":37,"nodeType":"103","endLine":174,"endColumn":108},{"ruleId":"101","severity":1,"message":"104","line":86,"column":17,"nodeType":"103","endLine":86,"endColumn":44},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],["105"],["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]